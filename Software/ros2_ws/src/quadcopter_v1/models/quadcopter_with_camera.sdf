<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="quadcopter_with_camera">

    <!-- World link -->
    <link name="world"/>

    <!-- Define the box as the main link -->
    <link name="box_link">
      <pose>0 0 1 0 0 0</pose> <!-- Adjust the pose to position the box -->

      <visual name="box_visual">
        <geometry>
          <box>
            <size>1 1 0.5</size> <!-- Define the size of the box -->
          </box>
        </geometry>
      </visual>
      <collision name="box_collision">
        <geometry>
          <box>
            <size>1 1 1</size>
          </box>
        </geometry>
      </collision>

      <!-- Attach the camera sensor to the box -->
      <sensor name="camera" type="camera">
        <pose>0.5 0 0 0 0 0</pose> <!-- Position the camera -->
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>

        <!-- ROS2 Camera Plugin to publish the camera feed -->
        <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
          <ros>
            <namespace>/quadcopter</namespace>
            <remapping>image_raw:=/camera/image_raw</remapping>
          </ros>
          <camera_name>camera</camera_name>
          <frame_name>box_link</frame_name> <!-- Attach the camera frame to the box link -->
        </plugin>
      </sensor>

      <!-- Add visual for the camera -->
      <visual name="camera_visual">
        <pose>0.5 0 0 0 1.5708 0</pose> <!-- Match camera pose -->
        <geometry>
          <cylinder>
            <radius>0.06</radius>
            <length>0.04</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 1 1</ambient> <!-- Blue color -->
          <diffuse>0 0 1 1</diffuse>
        </material>
      </visual>

      <!-- Right distance sensor -->
      <sensor name="right_distance_sensor" type="ray">
        <pose>0.5 0.1 0 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>0</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>10.0</max>
          </range>
        </ray>
        <always_on>1</always_on>
        <update_rate>10</update_rate>
        <plugin name="right_distance_plugin" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace>/quadcopter</namespace>
            <remapping>out:=/quadcopter/right_distance/out</remapping>
          </ros>
          <output_type>sensor_msgs/PointCloud2</output_type>
          <frameName>right_distance_sensor</frameName>
        </plugin>
      </sensor>

      <!-- Add visual for the right distance sensor -->
      <visual name="right_distance_sensor_visual">
        <pose>0.5 0.1 0 0 1.5708 0</pose>
        <geometry>
          <cylinder>
            <radius>0.04</radius>
            <length>0.02</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient> <!-- Green color -->
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>

      <!-- Left distance sensor -->
      <sensor name="left_distance_sensor" type="ray">
        <pose>0.5 -0.1 0 0 0 0</pose> <!-- Adjust position as needed -->
        <ray>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>0</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>10.0</max>
          </range>
        </ray>
        <always_on>1</always_on>
        <update_rate>10</update_rate>
        <plugin name="left_distance_plugin" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace>/quadcopter</namespace>
            <remapping>out:=/quadcopter/left_distance/out</remapping>
          </ros>
          <output_type>sensor_msgs/PointCloud2</output_type>
          <frameName>left_distance_sensor</frameName>
        </plugin>
      </sensor>

      <!-- Add visual for the left distance sensor -->
      <visual name="left_distance_sensor_visual">
        <pose>0.5 -0.1 0 0 1.5708 0</pose>
        <geometry>
          <cylinder>
            <radius>0.04</radius>
            <length>0.02</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 0 0 1</ambient> <!-- Red color -->
          <diffuse>1 0 0 1</diffuse>
        </material>
      </visual>
    </link>

    <!-- Hand of God plugin -->
    <plugin name="hand_of_god" filename="libgazebo_ros_hand_of_god.so">
      <ros>
        <namespace>/quadcopter</namespace>
        <remapping>pose:=/cmd_pose</remapping> <!-- Remap to the desired topic -->
      </ros>
      <link_name>box_link</link_name>
      <reference_frame>world</reference_frame> <!-- Explicitly set the reference frame -->
    </plugin>

  </model>
</sdf>
